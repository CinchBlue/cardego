//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.7

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "attributes")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::cards::Entity> for Entity {
    fn to() -> RelationDef {
        super::cards_to_attributes::Relation::Cards.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::cards_to_attributes::Relation::Attributes.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
