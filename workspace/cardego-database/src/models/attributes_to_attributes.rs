//! SeaORM Entity. Generated by sea-orm-codegen 0.7.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "attributes_to_attributes")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub parent_id: Vec<u8>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub child_id: Vec<u8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::attributes::Entity",
        from = "Column::ChildId",
        to = "super::attributes::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Attributes2,
    #[sea_orm(
        belongs_to = "super::attributes::Entity",
        from = "Column::ParentId",
        to = "super::attributes::Column::Id",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Attributes1,
}

impl ActiveModelBehavior for ActiveModel {}
